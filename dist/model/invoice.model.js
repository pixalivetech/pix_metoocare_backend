"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Invoice = void 0;
const mongoose_1 = require("mongoose");
const mongoose_plugin_autoinc_1 = require("mongoose-plugin-autoinc");
const invoiceSchema = new mongoose_1.default.Schema({
    _id: { type: mongoose_1.default.Types.ObjectId, required: true, auto: true },
    userId: { type: String, required: true, ref: "User" },
    panelId: { type: String, ref: "Panel" },
    companyId: { type: String, ref: "Company" },
    orderNumber: { type: String, ref: "Order" },
    invoiceId: { type: Number, required: true },
    invoiceType: { type: String, required: true },
    invoiceNumber: { type: String, required: true },
    invoiceDate: { type: Date, required: true },
    description: { type: String, required: true },
    finalPrice: { type: Number, required: true },
    unitPrice: { type: Number, required: true },
    discount: { type: Number, required: true },
    quantity: { type: Number, required: true },
    netAmount: { type: Number, required: true },
    gstRate: { type: Number, required: true },
    cgst: { type: Number, required: true },
    sgst: { type: Number, required: true },
    igst: { type: Number, required: true },
    taxAmount: { type: Number, required: true },
    totalAmount: { type: Number, required: true },
    amountInWords: { type: String, required: true },
    isReverseChargeApplicable: { type: Boolean, required: true },
    soldBy: { type: String, required: true },
    sellerName: [{
            name: { type: String, required: true },
            mobileNumber: { type: String, required: true },
            address: { type: String, required: true },
            city: { type: String, required: true },
            state: { type: String, required: true },
            pincode: { type: Number, required: true },
            landmark: { type: String, required: true },
            alternativeMobileNumber: { type: String, required: true },
            locality: { type: String, required: true },
            useMyCurretAddress: { type: Boolean, required: true },
        }],
    billingAddress: [{
            name: { type: String },
            mobileNumber: { type: String },
            address: { type: String },
            city: { type: String },
            state: { type: String },
            pincode: { type: Number },
            landmark: { type: String },
            alternativeMobileNumber: { type: String },
            locality: { type: String },
            useMyCurretAddress: { type: Boolean },
        }],
    shippingAddress: [{
            fullName: { type: String },
            mobileNumber: { type: String },
            address: { type: String },
            city: { type: String },
            state: { type: String },
            pincode: { type: Number },
            landmark: { type: String },
            alternativeMobileNumber: { type: String },
            locality: { type: String },
            useMyCurretAddress: { type: Boolean },
        }],
    placeOfSupply: { type: String, required: true },
    placeOfDelivery: { type: String, required: true },
    digitallySignedBy: { type: String, required: true },
    signatureDate: { type: Date, required: true },
    isDeleted: { type: Boolean, required: true },
    status: { type: Number, required: true },
    modifiedOn: { type: Date, required: true },
    modifiedBy: { type: String, required: true },
    createdOn: { type: Date, required: true },
    createdBy: { type: String, required: true },
});
invoiceSchema.plugin(mongoose_plugin_autoinc_1.autoIncrement, {
    model: 'Invoice',
    field: 'invoiceId',
    startAt: 1,
    incrementBy: 1
});
exports.Invoice = mongoose_1.default.model('Invoice', invoiceSchema);
//# sourceMappingURL=invoice.model.js.map